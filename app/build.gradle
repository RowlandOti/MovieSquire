apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId project.APPLICATION_ID
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    }
    signingConfigs {
        release {
            def propFile = file('../.signing/signing.properties')
            if (propFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propFile))

                storeFile = file(props['STORE_FILE'])
                storePassword = props['STORE_PASSWORD']
                keyAlias = props['KEY_ALIAS']
                keyPassword = props['KEY_PASSWORD']
            }
        }
    }
    productFlavors {
        //Paid Version
        pro {
            applicationId = project.APPLICATION_ID + ".pro"
            versionName project.VERSION_NAME + "-pro"
            //Accessed in java code as BuildConfig.IS_PRO_VERSION
            buildConfigField "boolean", "IS_PRO_VERSION", "true"
            buildConfigField 'String', 'IMDB_API_KEY', '"e98b412771ccf982c7a7fa8063878926"'
            productFlavors.pro.signingConfig signingConfigs.release

        }
        //Free Version
        free {
            applicationId = project.APPLICATION_ID + ".free"
            versionName project.VERSION_NAME + "-free"
            //Accessed in java code as BuildConfig.IS_PRO_VERSION
            buildConfigField "boolean", "IS_PRO_VERSION", "false"
            buildConfigField 'String', 'IMDB_API_KEY', '"e98b412771ccf982c7a7fa8063878926"'
            productFlavors.free.signingConfig signingConfigs.release

        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            // Show the logs when debugging
            buildConfigField "Boolean", "IS_DEBUG_MODE", "true"
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Hide all the logs on product release
            buildConfigField "Boolean", "IS_DEBUG_MODE", "false"
        }
    }
}

dependencies {
    // LOCAL BINARY DEPENDENCY
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // TEST BINARY DEPENDENCIES
    testCompile 'junit:junit:4.12'
    // MODULE DEPENDENCY
    //compile project(':libraries:design')
    // REMOTE BINARY DEPENDENCY - Android
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:palette-v7:23.1.1'
    // REMOTE BINARY DEPENDENCY - Third Party
    // Use - Rest API support
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    // Use - Image Loading
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.facebook.fresco:fresco:0.8.1+'
    // Use - General Utilities support
    compile 'com.uwetrottmann:androidutils:2.0.0'
    // Use - Data & network flow analytics/debugging support
    compile 'com.facebook.stetho:stetho:1.2.0'
    compile 'com.facebook.stetho:stetho-okhttp:1.2.0'
    compile 'com.squareup.okhttp:logging-interceptor:2.6.0'
    // Use - Database support
    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    // Use - View Injection support
    compile 'com.jakewharton:butterknife:7.0.1'
    // Use - RecycleView Animation support
    compile 'jp.wasabeef:recyclerview-animators:1.3.0'
    // Use - SlidingTabstripLayout for Tabs
    compile 'com.rowland.slidingtabstriplayout:slidingTabStripLayout:1.0.0-beta-1'
}
